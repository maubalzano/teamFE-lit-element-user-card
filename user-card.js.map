{"version":3,"file":"user-card.js","sourceRoot":"","sources":["src/user-card.ts"],"names":[],"mappings":";;;;;;AACA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAW5D,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,UAAU;IACpC,MAAM,KAAc,MAAM;QACtB,OAAO,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA8BN,CAAA;IAER,CAAC;IAiBQ,MAAM;;QAEX,OAAO,IAAI,CAAC;;;2BAGO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG;;;yBAG9B,CAAA,MAAA,IAAI,CAAC,IAAI,0CAAE,MAAM,MAAK,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM;;;;;;0BAM7C,MAAA,IAAI,CAAC,IAAI,0CAAE,SAAS,YAAY,MAAA,IAAI,CAAC,IAAI,0CAAE,QAAQ;;;sDAGvB,MAAA,IAAI,CAAC,IAAI,0CAAE,MAAM;uDAChB,MAAA,IAAI,CAAC,IAAI,0CAAE,OAAO;6DACZ,MAAA,IAAI,CAAC,IAAI,0CAAE,GAAG;;;;qCAItC,GAAG,EAAE,GAAE,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAA,CAAA,CAAC;;;yCAGjD,MAAA,IAAI,CAAC,IAAI,0CAAE,MAAM;;SAEjD,CAAA;IACL,CAAC;CACJ,CAAA;AAnCG;IAXC,QAAQ,CAAC;QACN,SAAS,EAAE,CAAC,KAAoB,EAAE,EAAE;YAClC,IAAI,KAAK,EAAC;gBACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAE5B;;gBAEC,OAAO,SAAS,CAAC;QACrB,CAAC;KACJ,CAAC;sCACU;AAGZ;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;0CACR;AAjDT,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CAiFpB;SAjFY,QAAQ","sourcesContent":["\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\n\nexport interface User {\n    firstName: string,\n    lastName: string,\n    imgUrl?: string,\n    dob: string,\n    gender?: 'male'|'female'|'other',\n    address: string\n}\n@customElement('user-card')\nexport class UserCard extends LitElement {\n    static override get styles(){\n        return css`\n           :host{\n                font-family: Arial, 'sans serif';\n               display:block;\n               border:solid 1px rgb(101 122 131);\n               border-radius:5px;\n               box-shadow: 2px 4px 4px rgb(101 122 131);\n               background-color: #E1F5FE;\n               padding:20px;\n               max-width:500px\n           }\n           h2{\n               margin: 5px 0px;\n               color:rgb(28 59 72)\n           }\n           .card-container{\n               display:flex;\n               align-items:start;\n               justify-content:space-between\n           }\n           .user-img{\n               width:45%\n           }\n           button{\n               border:none;\n               background-color:rgb(101 122 131);\n               color: #E1F5FE;\n               border-radius:20px;\n               padding:5px 15px\n           }\n           `\n\n    } \n    @property({\n        converter: (value: string | null) => {\n          if (value){\n              console.log(value);\n              return JSON.parse(value);\n\n          }\n          else\n            return undefined;\n        }\n    })\n    user?: User;\n\n    @property({type: Boolean})\n    disabled!: boolean\n\n    override render() {\n\n        return html `\n        <style>\n            :host{\n                opacity: ${!!this.disabled ? '.6' : '1'}\n            }\n            p:first-of-type strong {\n                color: ${this.user?.gender === 'male' ? 'blue' : 'pink'}\n            }\n        </style>\n        <div class=\"card-container\">\n            <div>\n                <div class=\"card\">\n                    <h2>${this.user?.firstName} <strong>${this.user?.lastName}</strong></h2>\n                </div>\n                <div>\n                    <p><span>Gender: </span><strong>${this.user?.gender}</strong></p>\n                    <p><span>Address: </span><strong>${this.user?.address}</strong></p>\n                    <p><span>Date of Birth: </span><strong>${this.user?.dob}</strong></p>\n                </div>\n                <br>\n                <div>\n                    <button @click=${() => {this.dispatchEvent(new Event('custom-event'))}}>EDIT USER</button>\n                </div>\n            </div>\n            <img class=\"user-img\" src=\"${this.user?.imgUrl}\">\n        </div>\n        `\n    }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n      'user-card': UserCard\n    }\n  }"]}